ስማርት ኮንትራት (ዘመናዊ ውል)
አንድ መሰረታዊ እይታን በምሳሌ እንመልከት።
ከታች ያለው ኮድ አንድ እሴትን ማስቀመጥ የሚችል ውል ሲሆን  ራሱንም ሌሎች ውሎች(ኮንትራቶች)   መጠቀም እና ማግኘት እንዲችሉ ማድረግ የሚችል ነው። ይህን አረፍተ ነገር አሁን ሙሉ በሙሉ መረዳት አይጠበቅባችሁም።ቡሀላ ላይ በዝርዝር እናየዋለን።

የመረጃ ቋት (ስቶሬጅ) ምሳሌ
// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.4.16 <0.9.0;

contract SimpleStorage {
    uint storedData;

    function set(uint x) public {
        storedData = x;
    }

    function get() public view returns (uint) {
        return storedData;
    }
}

የመጀመሪያው መስመር የ ኮዱ ስሪት በGPL version 3.0 ስር ፍቃድ እንዳለው የሚገልፅ ሲሆን; የተሰጠውን ፈቃድም ማሽኖች መረዳት የሚችሏቸው የፈቃድ ማረጋገጫዎች ናቸው። ይበልጥ ጠቃሚ የሚሆነው ኮዱን በድረገፅ እና በሌሎች አስፈላጊ ሁኔታዎች ውስጥ  በምንተገብርበት ጊዜ ነው።

በቀጣይ መስመር ላይ የምንመለከተው ኮድ  ፕራግማ (Pragma) ይባላል።ያስቀመጣቸው ቁጥሮችም ስሪታቸው ከ version 0.4.16 በላይ ወይም እኩል የሆኑ(>=) ስሪቶቹን እንዲጠቀም የሚያዘው ሲሆን;
ከ version 0.9.0 እና ከሱ በላይ ስሪቶቹን እንዳይጠቀም ይከለክለዋል።ይህ የሚያረጋገጠውም አዲስ የመጣው ስሪት (የተሻሻለው ስሪት) አሁን ኮድ ከተደረገበት ስሪቱ ጋር ሊጣመር እንደማይችል ለማሳየት ነው።
ምክንያቱም አዲስ የመጣው ስሪት በተወሰነ መልኩ የተለየ ባህሪ ይዞ ሊመጣ ስለሚችል ነው።ፕራግማ ማለት መተግበሪያዎች (ኮምፓይለሮች) የሚረዷቸው የተለመዱ ቋሚ መመሪያዎች ሲሆኑ የተፃፈውን ኮድ እንዴት ማስተናበር ወይም ማስተናገድ እንዳለባቸው ትእዛዝ የሚሰጡ ናቸው።
ውልን በሶሊዲቲ መነፅር ስንመለከተው; ውል ማለት የኮዶች( ተግባራቶቻቸው) እና ውሂቦች(የመረጃ ሁኔታዎች) በኢተርየም ብሎክ ቼን ላይ በአንድ አድራሻ ውስጥ ሲገኝ ነው። ይህ መስመር የሚያሳየው  state variableን ሲሆን  uint ደግሞ የ state variable አይነት ነው

uint(unsigned integer of 256 bits)
ስቴት ቫርያብልን በውሂብ ጎታ (ዳታቤዝ) ውስጥ እንደ አንድ መረጃ ማስገቢያ አድርገን ልናስበው እንችላለን።መረጃዎቹንም ጎታው(ዳታቤዙ)  በሚረዳቸው ኮዶች በመጥራት መቀየርና  መጠየቅ እንችላለን።

ከላይ ባለው ምሳሌ ላይ ውሉ set እና get የሚባሉ ተግባራትን(ፈንክሽኖችን) ያሳያል።እነዚ የሚጠቅሙትም ስቴት ቫርያብሉ ላይ ያለውን እሴት ፈልጎ ለማውጣት ወይም ለማሻሻል ነው።



